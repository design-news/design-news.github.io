{"pageProps":{"post":{"title":"AI 경험을 위한 디자인","description":"","date":"2024-05-17 22:04","slug":"2024-05-17-DesigningforAIExperiences","content":"\n\nAI의 관점에서 디자인 시스템\n\nAI는 작업 방식을 변화시키고 있습니다. 이 글은 핵심 개념과 예시를 통해 AI 경험을 가능하게 하는 디자인 시스템에 대해 알아봅니다.\n\n![AI Design System](/assets/img/2024-05-17-DesigningforAIExperiences_0.png)\n\n## 투명성\n\n<div class=\"content-ad\"></div>\n\nAI는 chatGPT와 같이 독립적인 경험처럼 기존 앱과 통합되어 있습니다. AI를 기존 앱/프로세스에 통합할 때 AI가 사용되고 있는지 명확히 알 수 있어야 합니다. 예를 들어, 사람과 AI 추천이 함께 제공되는 경우 추천이 명확하게 라벨링되어야 합니다.\n\n의사 결정/프로세스/추천에 AI가 참여했음을 나타낼 수 있는 몇 가지 기술을 아래에서 설명하겠습니다:\n\n## 브랜드\n\n강력한 시각적 브랜드는 사용자들이 AI 서비스와 콘텐츠와 상호 작용하는지를 이해하는 데 도움이 될 것입니다.\n\n<div class=\"content-ad\"></div>\n\nOpenAI은 채팅 대화 중에 자신들의 로고를 아바타로 사용합니다. 이 로고는 OpenAI 제품 오퍼링 전반에 사용되며, 일관된 경험을 제공하고 AI 상호작용을 식별하는 데 도움이 됩니다. Microsoft도 Copilot에서 동일한 방식을 사용합니다.\n\n디자인 시스템은 표준 아바타 구성 요소와 AI 관련 그림을 제공함으로써 이러한 경험을 가능케 할 수 있습니다.\n\n![이미지](/assets/img/2024-05-17-DesigningforAIExperiences_1.png)\n\n## 색상\n\n<div class=\"content-ad\"></div>\n\n보라색이 AI를 대변하는 선도적인 색 중 하나로 떠오르고 있습니다. 때로는 색상 그라데이션이 이용되어 능력의 범위와 복잡성을 나타냅니다. \n\n디자인 시스템은 사용자들을 위한 일관성 구축을 돕기 위해 AI 요소 주변의 색상 안내를 제공할 수 있습니다.\n\n![image](/assets/img/2024-05-17-DesigningforAIExperiences_2.png)\n\n## 완드, 반짝임, 그리고 구체\n\n<div class=\"content-ad\"></div>\n\n아이콘은 AI와 관련된 작업 및 콘텐츠를 빠르게 이해하는 데 도움이 될 수 있어요.\n\n콘텐츠를 생성하기 위한 CTA(Call To Action)에 주로 사용되는 완드와, AI가 생성한 콘텐츠를 강조하는 데 사용되는 반짝임 효과인 스파클이 있어요. 완드 CTA와 잘 어울리는 스파클은 AI 생성 콘텐츠를 강조하기에 좋은 선택이에요.\n\nSiri와 같은 그래픽을 사용한 구체적인 AI 개체의 표현으로 인해 구체적인 AI 개체로서 보다는 AI 개념을 추상화하는 방향으로 나아가고 있는 많은 AI 제품들이 있어요 (2024년의 Clippy와 같은 방식으로 AI를 표현하는 것을 생각해보세요).\n\n디자인 시스템은 이러한 경험에 필요한 아이콘을 제공할 뿐만 아니라 완드 휙 소리나 빛나는 스파클과 같은 애니메이션도 제공할 수 있어요. 이러한 애니메이션은 사용자에게 기쁨을 제공할 수 있지만 과용되면 주의해야 해요. 애니메이션은 처음 사용할 때 또는 가끔 사용할 때만 트리거되도록 고려해보세요.\n\n<div class=\"content-ad\"></div>\n\n![Image](/assets/img/2024-05-17-DesigningforAIExperiences_3.png)\n\n## 설명\n\n사용자는 AI가 생성한 콘텐츠와 제안을 원천으로 되돌릴 수 있어야 합니다. 이는 신뢰와 추적 가능성을 경험에 녹여냅니다.\n\nCopilot은 정보를 얻은 곳을 참조하는 내용 각주를 제공합니다.\n\n<div class=\"content-ad\"></div>\n\n디자인 시스템은 이 경험을 지원하기 위해 주석 컴포넌트를 제공하여 소스 자체와 함께 사용되는 칩/오버플로우 칩에 필요한 정보를 제공할 수 있습니다.\n\n![이미지](/assets/img/2024-05-17-DesigningforAIExperiences_4.png)\n\n# 피드백\n\n환각 및 잘못된 콘텐츠는 여전히 AI 제품에서 흔합니다. 사용자들은 모델을 개선하거나 추가 기능을 추가하기 위해 사용할 수 있는 피드백을 제공할 수 있어야 합니다.\n\n<div class=\"content-ad\"></div>\n\n다음은 EDT 시간으로 3월 30일 토요일 새벽 4시쯤에 생성된 예입니다. 결과는 잘못되었을 가능성이 높고, 아마도 최신 모델 생성 시기를 나타낼 것입니다.\n\n디자인 시스템은 아이콘 그래픽을 제공하여 짧은 양식 피드백에 대한 피드백 경험을 활성화할 수 있으며, 장문 피드백을 위해 표준 텍스트 입력 구성 요소를 제공할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n# 성능과 대기 시간\n\n실시간으로 AI 콘텐츠가 생성되므로 현재 요청이 보내진 후 응답이 앱으로 반환되어 사용자에게 렌더링되기까지는 약간의 지연이 발생합니다.\n\n사용자가 이 지연을 어떻게 인지하느냐는 UI 경험에 영향을 받을 것입니다. 빈 화면은 사용자가 문제가 있는 것으로 생각하고 떠나버릴 수 있습니다.\n\n인라인로딩 표시기는 사용자가 자신의 질문이 보내졌고 AI가 \"생각\"하고 있다는 것을 확신할 수 있도록 도와줄 수 있습니다. 섬세한 애니메이션은 사용자가 기다리는 동안 즐겁게 할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n## 컨텍스트 한계\n\n일부 AI 경험은 지원하는 컨텍스트의 양이 제한될 수 있습니다. 예를 들어 단일 대화에 대한 채팅 기록의 양이 제한될 수 있습니다.\n\n사용자에게 컨텍스트 한계를 알려줌으로써 채팅의 길이에 대한 기대를 관리할 수 있습니다. 이러한 간단한 표시기는 각 부서가 동일한 접근 방식을 사용하도록 하는 디자인 시스템 내에서 중앙집중화될 수 있습니다.\n\n![이미지](/assets/img/2024-05-17-DesigningforAIExperiences_7.png)\n\n<div class=\"content-ad\"></div>\n\n# 덜은 더 많은 것\n\n생성적 AI는 화면을 내용으로 저렴하게 채울 수 있는 가능성을 제공합니다; 모든 앱이 제공할 수 있는 모든 것을 보여주는 것이 유혹적일 수 있지만 사용자가 특정 데이터 포인트에 집중하지 못하고 다른 곳으로 넘어가는 반대 효과를 가질 수 있습니다.\n\n화이트 스페이스는 디자인에서 항상 효과적인 도구가 될 것입니다 (현재 아마도 이 글을 중앙에서 읽고 계실 텐데 그것은 읽고 있는 글에 집중할 수 있도록 화이트 스페이스를 활용하기 때문입니다); 새롭거나 복잡한 경우 특히 내용을 충분히 간격을 두어야 합니다.\n\n디자인 시스템은 사용하기 쉬운 간격과 레이아웃 구성 요소를 제공할 수 있으며 소화하기 쉬운 경험을 만들 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n# 결론\n\nAI 공간은 빠르게 변화하고 있습니다; 몇 달 전까지는 존재하지 않았던 새로운 경험을 지원하도록 디자인 시스템이 유연하고 적응해야 합니다.\n\n디자인 시스템이 AI 경험을 가능하게 하는 방법에 대한 생각이나 의견이 있으시면 꼭 댓글을 남겨주세요!","ogImage":{"url":"/assets/img/2024-05-17-DesigningforAIExperiences_0.png"},"coverImage":"/assets/img/2024-05-17-DesigningforAIExperiences_0.png","tag":["Tech"],"readingTime":4},"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    img: \"img\",\n    h2: \"h2\",\n    h1: \"h1\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"AI의 관점에서 디자인 시스템\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"AI는 작업 방식을 변화시키고 있습니다. 이 글은 핵심 개념과 예시를 통해 AI 경험을 가능하게 하는 디자인 시스템에 대해 알아봅니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-17-DesigningforAIExperiences_0.png\",\n        alt: \"AI Design System\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"투명성\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"AI는 chatGPT와 같이 독립적인 경험처럼 기존 앱과 통합되어 있습니다. AI를 기존 앱/프로세스에 통합할 때 AI가 사용되고 있는지 명확히 알 수 있어야 합니다. 예를 들어, 사람과 AI 추천이 함께 제공되는 경우 추천이 명확하게 라벨링되어야 합니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"의사 결정/프로세스/추천에 AI가 참여했음을 나타낼 수 있는 몇 가지 기술을 아래에서 설명하겠습니다:\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"브랜드\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"강력한 시각적 브랜드는 사용자들이 AI 서비스와 콘텐츠와 상호 작용하는지를 이해하는 데 도움이 될 것입니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"OpenAI은 채팅 대화 중에 자신들의 로고를 아바타로 사용합니다. 이 로고는 OpenAI 제품 오퍼링 전반에 사용되며, 일관된 경험을 제공하고 AI 상호작용을 식별하는 데 도움이 됩니다. Microsoft도 Copilot에서 동일한 방식을 사용합니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"디자인 시스템은 표준 아바타 구성 요소와 AI 관련 그림을 제공함으로써 이러한 경험을 가능케 할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-17-DesigningforAIExperiences_1.png\",\n        alt: \"이미지\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"색상\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"보라색이 AI를 대변하는 선도적인 색 중 하나로 떠오르고 있습니다. 때로는 색상 그라데이션이 이용되어 능력의 범위와 복잡성을 나타냅니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"디자인 시스템은 사용자들을 위한 일관성 구축을 돕기 위해 AI 요소 주변의 색상 안내를 제공할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-17-DesigningforAIExperiences_2.png\",\n        alt: \"image\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"완드, 반짝임, 그리고 구체\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"아이콘은 AI와 관련된 작업 및 콘텐츠를 빠르게 이해하는 데 도움이 될 수 있어요.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"콘텐츠를 생성하기 위한 CTA(Call To Action)에 주로 사용되는 완드와, AI가 생성한 콘텐츠를 강조하는 데 사용되는 반짝임 효과인 스파클이 있어요. 완드 CTA와 잘 어울리는 스파클은 AI 생성 콘텐츠를 강조하기에 좋은 선택이에요.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Siri와 같은 그래픽을 사용한 구체적인 AI 개체의 표현으로 인해 구체적인 AI 개체로서 보다는 AI 개념을 추상화하는 방향으로 나아가고 있는 많은 AI 제품들이 있어요 (2024년의 Clippy와 같은 방식으로 AI를 표현하는 것을 생각해보세요).\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"디자인 시스템은 이러한 경험에 필요한 아이콘을 제공할 뿐만 아니라 완드 휙 소리나 빛나는 스파클과 같은 애니메이션도 제공할 수 있어요. 이러한 애니메이션은 사용자에게 기쁨을 제공할 수 있지만 과용되면 주의해야 해요. 애니메이션은 처음 사용할 때 또는 가끔 사용할 때만 트리거되도록 고려해보세요.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-17-DesigningforAIExperiences_3.png\",\n        alt: \"Image\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"설명\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"사용자는 AI가 생성한 콘텐츠와 제안을 원천으로 되돌릴 수 있어야 합니다. 이는 신뢰와 추적 가능성을 경험에 녹여냅니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Copilot은 정보를 얻은 곳을 참조하는 내용 각주를 제공합니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"디자인 시스템은 이 경험을 지원하기 위해 주석 컴포넌트를 제공하여 소스 자체와 함께 사용되는 칩/오버플로우 칩에 필요한 정보를 제공할 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-17-DesigningforAIExperiences_4.png\",\n        alt: \"이미지\"\n      })\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"피드백\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"환각 및 잘못된 콘텐츠는 여전히 AI 제품에서 흔합니다. 사용자들은 모델을 개선하거나 추가 기능을 추가하기 위해 사용할 수 있는 피드백을 제공할 수 있어야 합니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"다음은 EDT 시간으로 3월 30일 토요일 새벽 4시쯤에 생성된 예입니다. 결과는 잘못되었을 가능성이 높고, 아마도 최신 모델 생성 시기를 나타낼 것입니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"디자인 시스템은 아이콘 그래픽을 제공하여 짧은 양식 피드백에 대한 피드백 경험을 활성화할 수 있으며, 장문 피드백을 위해 표준 텍스트 입력 구성 요소를 제공할 수 있습니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"성능과 대기 시간\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"실시간으로 AI 콘텐츠가 생성되므로 현재 요청이 보내진 후 응답이 앱으로 반환되어 사용자에게 렌더링되기까지는 약간의 지연이 발생합니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"사용자가 이 지연을 어떻게 인지하느냐는 UI 경험에 영향을 받을 것입니다. 빈 화면은 사용자가 문제가 있는 것으로 생각하고 떠나버릴 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"인라인로딩 표시기는 사용자가 자신의 질문이 보내졌고 AI가 \\\"생각\\\"하고 있다는 것을 확신할 수 있도록 도와줄 수 있습니다. 섬세한 애니메이션은 사용자가 기다리는 동안 즐겁게 할 수 있습니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"컨텍스트 한계\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"일부 AI 경험은 지원하는 컨텍스트의 양이 제한될 수 있습니다. 예를 들어 단일 대화에 대한 채팅 기록의 양이 제한될 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"사용자에게 컨텍스트 한계를 알려줌으로써 채팅의 길이에 대한 기대를 관리할 수 있습니다. 이러한 간단한 표시기는 각 부서가 동일한 접근 방식을 사용하도록 하는 디자인 시스템 내에서 중앙집중화될 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/img/2024-05-17-DesigningforAIExperiences_7.png\",\n        alt: \"이미지\"\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"덜은 더 많은 것\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"생성적 AI는 화면을 내용으로 저렴하게 채울 수 있는 가능성을 제공합니다; 모든 앱이 제공할 수 있는 모든 것을 보여주는 것이 유혹적일 수 있지만 사용자가 특정 데이터 포인트에 집중하지 못하고 다른 곳으로 넘어가는 반대 효과를 가질 수 있습니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"화이트 스페이스는 디자인에서 항상 효과적인 도구가 될 것입니다 (현재 아마도 이 글을 중앙에서 읽고 계실 텐데 그것은 읽고 있는 글에 집중할 수 있도록 화이트 스페이스를 활용하기 때문입니다); 새롭거나 복잡한 경우 특히 내용을 충분히 간격을 두어야 합니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"디자인 시스템은 사용하기 쉬운 간격과 레이아웃 구성 요소를 제공할 수 있으며 소화하기 쉬운 경험을 만들 수 있습니다.\"\n    }), \"\\n\", _jsx(\"div\", {\n      class: \"content-ad\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"결론\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"AI 공간은 빠르게 변화하고 있습니다; 몇 달 전까지는 존재하지 않았던 새로운 경험을 지원하도록 디자인 시스템이 유연하고 적응해야 합니다.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"디자인 시스템이 AI 경험을 가능하게 하는 방법에 대한 생각이나 의견이 있으시면 꼭 댓글을 남겨주세요!\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}