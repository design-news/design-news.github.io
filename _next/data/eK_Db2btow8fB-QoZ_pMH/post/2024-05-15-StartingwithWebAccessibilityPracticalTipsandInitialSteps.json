{"pageProps":{"post":{"title":"웹 접근성 시작하기 실용적인 팁과 첫걸음","description":"","date":"2024-05-15 12:30","slug":"2024-05-15-StartingwithWebAccessibilityPracticalTipsandInitialSteps","content":"\n![Image](/assets/img/2024-05-15-StartingwithWebAccessibilityPracticalTipsandInitialSteps_0.png)\n\n한 눈에 봐도 그림 속 두 개의 경사로 중 어떤 것이 접근성이 좋고 피해야 할 것인지 명확하게 알 수 있어요.\n\n우리는 현실 세계에서 무엇이 '접근성'을 의미하는지 알고 있죠.\n\n예를 들어 경사로를 살펴봅시다. 경사로는 원활한 이동을 가능케 하며 장애물 없이 공간을 이동할 수 있도록 해줍니다. 휠체어를 탄 사람, 유모차를 밀고 다니는 부모님, 다리 부상을 입은 사람이든 상관 없이, 경사로는 모두에게 동등한 접근을 보장해줍니다.\n\n접근성은 물리적인 세계를 넘어 디지털 세계에서도 중요합니다. 능력에 관계없이 모든 사람이 온라인 콘텐츠를 탐색할 수 있도록 어떻게 보장할 수 있을까요?\n\n웹 접근성은 많은 사람들이 압도되고 어디서부터 시작해야 할지 모르는 상태로 떠 있는 것처럼 보입니다. 본 기사는 접근성이 무엇인지, 왜 중요한지에 대해 알아보고, 웹사이트를 즉시 개선할 수 있는 몇 가지 신속하면서도 효과적인 전략을 살펴보는 명확한 출발점을 제공하기 위한 것입니다.\n\n![Starting with Web Accessibility Practical Tips and Initial Steps](/assets/img/2024-05-15-StartingwithWebAccessibilityPracticalTipsandInitialSteps_1.png)\n\n## a11y\n\n\"A11y\"이라는 용어를 들어봤을 수도 있지만, 그 의미가 무엇인지 알고 계신가요?\n\n이 용어는 '접근성(accessibility)'의 숫자 단어입니다: 숫자 11은 이 단어의 첫 번째 글자(\"a\")와 마지막 글자(\"y\") 사이의 글자 수를 나타냅니다.\n\n기본적으로, 접근성은 누구든지 그들의 신체적 또는 인지적 능력에 관계없이 모두에게 동일하게 접근하고 사용할 수 있는 디지털 콘텐츠를 디자인하고 개발하는 것을 말합니다.\n\n오늘날 우리의 세상은 온라인 속에서 모든 것이 이루어집니다. 온라인에서 물건을 사고, 호텔을 예약하고, 청구서를 지불하며, 일자리를 찾고, 음식을 주문하는 등이 있습니다. 대부분의 경우, 이러한 것들은 우리가 당연하게 여기는 일상적인 작업들입니다. 그러나 비접근성 웹사이트를 사용할 때 매일 난관에 맞닥뜨리고 있는 상당수의 사람들이 있으며, 이로 인해 뒤처지거나 배제되는 경우가 많습니다.\n\n## 장애에 대한 간단한 이야기\n\n세계 보건 기구(WHO)에 따르면 전 세계적으로 약 13억 명의 사람이 중대한 장애를 경험한다는 사실을 아셨나요? 이는 전 세계 인구의 16%에 해당하며, 우리 중 1명 중 6명이 해당됩니다.\n\n잘못된 일반적인 오해 중 하나는 장애를 맹목증만으로만 연상하는 것인데, 사실은 시각, 청각, 운동 및 인지 장애 등 여러 유형의 장애가 있습니다.\n\n![이미지](/assets/img/2024-05-15-StartingwithWebAccessibilityPracticalTipsandInitialSteps_2.png)\n\n접근성에 대한 한 가지 중요한 점은 앱을 디자인하고 개발할 때 고려하기 시작하면, 모두에게 더 나은 경험을 제공하는 더 다듬어진 제품을 만들게 되고, 더 다양한 상황과 맥락에서 사용할 수 있다는 것입니다.\n\n왜 그럴까요?\n\n예를 들어보죠. 폐쇄 자막은 처음에 청각 장애가 있는 사람들을 위한 도구로 만들어졌지만, 이제는 대중화되어 다양한 상황에서 우리 모두가 의존하게 되었습니다. 버스나 의사 진료를 기다리는 조용한 장소에 있을 때처럼 자막을 켜놓은 적이 얼마나 많나요? 또한, 시끄러운 환경에서 자신을 발견하거나 현재 배우고 있는 언어로 영화를 보고 있을 때 유용합니다.\n\n이것은 다음으로 이어지는데, 우리 모두는 삶의 어느 시점에서 어떤 종류의 장애를 경험합니다. 장애는 다음과 같을 수 있습니다:\n\n영구적: 바꿀 수 없는 것. 시각 장애, 청각 장애, 관절염.\n\n일시적: 기다려야 하는 것. 팔을 부러뜨려 붕대를 감아야 하는 경우, 안경을 잃어버려서 찾을 수 없는 경우 등.\n\n상황적: 물러날 수 있는 것. 밝은 햇빛 속에서 핸드폰을 사용하려고 하면 화면을 보기 어렵고, 시끄러운 방에서는 아무것도 들리지 않는 등.\n\n또한, 우리가 노인으로 나이를 먹게 되면 우리도 결국 장애들을 경험하게 될 것입니다.\n\n이제 모두가 사용하고 기여할 수 있는 접근성 있는 웹사이트를 만들어야 하는 이유에 대해 더 잘 이해했습니다. 그렇다면 지금 바로 접근성을 향상시키는 실용적인 팁을 살펴보겠습니다.\n\n## HTML 언어 명시\n\n쉬운 것부터 시작해 보죠. HTML 언어를 명시하는 것만으로도 장애를 가진 사람들에게 큰 도움이 될 수 있습니다. 시각 또는 인지적 장애를 가진 사용자들은 종종 화면 낭독기를 사용하는데, 이 기술은 컴퓨터 화면에 있는 내용을 소리내어 읽어 줍니다.\n\nHTML 언어를 명시하면 화면 낭독기가 어떤 언어를 사용해야 하는지 알려줍니다. 정확한 발음을 보장하기 때문에 스페인어를 프랑스어 발음으로 읽는 일은 피하고 싶겠죠?\n\n위 작업은 다음과 같이 `html` 태그의 시작 부분에 `lang` 속성을 추가하여 수행할 수 있습니다.\n\n```js\n<html lang=\"en\">\n```\n\n페이지 내에서 언어를 변경해야 할 경우, 특정 태그에 `lang` 속성을 사용할 수 있습니다.\n\n```js\n<p lang=\"es\">Texto en español</p>\n```\n\n## 텍스트 밀도와 글꼴 크기\n\n이것들은 접근성을 위해 매우 중요합니다. 왜냐하면 이들은 사용자가 콘텐츠를 읽고 이해하는 데 직접적으로 영향을 미치기 때문입니다.\n\n텍스트가 너무 작고 콘텐츠가 밀접하게 밀집되어 있으면 사용자가 명확하게 읽기 어려울 수 있습니다.\n\n이 두 옵션 중 어느 것이 정보를 찾기 쉽게 만들어 주나요?\n\n![Image of Color Contrast](/assets/img/2024-05-15-StartingwithWebAccessibilityPracticalTipsandInitialSteps_3.png)\n\n## Color contrast\n\nColor can be fun but it also needs to be functional. Ensuring sufficient contrast between text and background elements makes content easier to read for everyone, especially those with visual impairments. One tool that I like to use to check if two colors have enough contrast is the WebAIM Contrast Checker.\n\n![Another Image](/assets/img/2024-05-15-StartingwithWebAccessibilityPracticalTipsandInitialSteps_4.png)\n\n이 규칙에는 몇 가지 예외 사항이 있습니다. 대비 가이드라인을 준수할 필요가 없는 요소들은 다음과 같습니다:\n\n- 중요한 정보를 전달하지 않고 순전히 심미적인 요소인 장식용 요소.\n- 콘텐츠를 이해하는 데 필수적이지 않은 로고 및 이미지.\n- 즉각적인 사용자 상호작용이 필요하지 않은 비활성 상태의 요소.\n\n## 의미론적 HTML\n\nHTML을 처음 배우기 시작했을 때, \"의미론적 HTML\"의 개념이 자주 강조되었던 것을 기억합니다. `section`, `article` 또는 `header`와 같은 요소를 사용하는 중요성에 대해 자주 들었는데, 비의미론적인 태그인 `div` 또는 `span`에 의존하는 대신 이러한 요소를 사용하는 것이 왜 중요한지 처음에는 완전히 이해하지 못했었습니다. 그러나 그 이후로 그 이유가 꽤 타당하다는 것을 깨달았습니다.\n\n간단히 말해서, \"시맨틱 HTML\"이라고 말할 때 그것은 의미가 있다는 뜻입니다. 시맨틱 HTML은 콘텐츠를 올바르게 설명할 것입니다. 예를 들어 `header` 요소는 헤더를 나타내고, `p` 요소는 단락을 설명합니다. 그래서 우리가 `header` 요소를 사용하면 즉시 헤더로 인식될 것입니다.\n\n또한, HTML 요소에는 기본 스타일이 함께 제공됩니다. 예를 들어, 순서 없는 목록 `ul`은 자동으로 점 표시가 포함되어 있어 시각적으로 콘텐츠 구조를 이해하는 데 도움이 됩니다. 추가적인 사용자 정의 스타일 없이도.\n\n이 점을 더 잘 설명하기 위해 동일한 내용의 두 버전을 비교해보세요: 하나는 시맨틱 HTML로 작성되었고 다른 하나는 시맨틱이 아닌 HTML로 작성되었습니다. 코드와 시각적으로 페이지의 구조와 내용을 더 효과적으로 전달하는 버전은 무엇입니까?\n\n![이미지](/assets/img/2024-05-15-StartingwithWebAccessibilityPracticalTipsandInitialSteps_5.png)\n\n<img src=\"/assets/img/2024-05-15-StartingwithWebAccessibilityPracticalTipsandInitialSteps_6.png\" />\n\n와우, 잘 했어요! 그런데 이것이 접근성과 무슨 상관이 있나요?\n\n간단히 말하자면 시맨틱 HTML은 보조 기술이 사용자에게 웹페이지에 제시된 콘텐츠에 대해 더 명확한 그림을 제공할 수 있도록 도와줍니다. 예를 들어, 세 개의 아이템을 포함하는 정렬된 목록 `ol`을 만나면, 화면 낭독기는 \"3 개의 항목 목록. 1: ..., 2: ..., 3: ...\"과 같이 읽습니다. 이렇게 함으로써 콘텐츠를 더 쉽게 따를 수 있게 됩니다. 또한 `header`, `nav`, `main`, `footer` 같은 landmark는 안내표지로 작용하여 화면 낭독기가 웹페이지의 구조를 더 효율적으로 탐색할 수 있습니다. 이것은 사용자가 콘텐츠 내에서 좀 더 쉽게 방향을 잡을 수 있게 해줍니다.\n\n시맨틱 HTML이 보조 기술과 어떻게 작동하는지 궁금하다면 계속 읽어보세요. 그렇지 않으면 \"이미지에 대한 대체 텍스트\"에 관한 다음 섹션으로 건너뛰어도 괜찮아요.\n\n## 시멘틱 HTML과 보조 기술\n\n대다수 사용자는 웹 페이지를 탐색할 때 사용자 인터페이스(UI)와 직관적으로 상호작용합니다. 예를 들어, 버튼을 발견하고 본능적으로 그 버튼을 클릭할 수 있다는 것을 알 수 있습니다. 또한 “오른쪽 하단에 있는 링크를 클릭하십시오”와 같은 지시에 따를 수 있습니다.\n\n그러나 시각 장애가 있는 사용자들은 시각적 단서에 의존할 수 없습니다. 이것이 왜 스크린 리더, 음성 인식 소프트웨어 또는 대체 입력 장치와 같은 보조 기술이 그들을 위한 대안 인터페이스를 만들기 위해 요소들을 감지해야 하는 이유입니다.\n\n그리고 웹 브라우저는 보조 기술과 어떻게 상호작용합니까?\n\nHTML 코드를 작성하면 브라우저가 파싱하여 Document Object Model (DOM) 트리로 변환합니다. 이 트리는 웹페이지의 구조를 표현하며 모든 HTML 요소와 그들의 관계를 포함합니다. 이 DOM 트리를 기반으로 브라우저는 그래픽 사용자 인터페이스 (GUI)를 렌더링합니다.\n\n동시에 브라우저는 DOM에서 파생된 접근성 트리를 생성합니다.\n\n이 트리는 시맨틱적으로 관련이 없는 요소 (예: `div` 요소와 같이 위치 지정을 위해 사용되는 요소)를 걸러내고 페이지 구조에 기여하는 요소들 (`button`, `header` 등)을 유지합니다.\n\n![Image](/assets/img/2024-05-15-StartingwithWebAccessibilityPracticalTipsandInitialSteps_7.png)\n\n그래서 시맨틱 HTML이 중요한 이유입니다. 우리는 `main`, `header`, `footer`와 같은 랜드마크를 사용하고, 순차적으로 `h1`부터 `h6`까지 레벨을 건너뛰지 않고 사용하며, 네비게이션 메뉴에 `nav`, 버튼 등을 사용하여 페이지의 구조와 기능이 올바르게 전달되도록 해야 합니다.\n\n예를 들어 `button` 태그 대신 `div`를 버튼으로 사용한다면, 보조 기술이 이를 감지하지 못할 수도 있어 사용자가 양식을 제출하는 등 중요한 기능을 놓칠 수 있습니다.\n\n일반 HTML 요소만으로 의도한 의미를 충분히 전달할 수 없는 경우, 접근성을 향상시키기 위해 ARIA(접근 가능한 리치 인터넷 응용 프로그램)를 마지막 수단으로 사용할 수 있습니다.\n\nARIA는 HTML 요소에 추가할 수 있는 역할, 상태, 속성에 대한 추가 정보를 제공하는 속성의 세트입니다. 기본적으로 HTML 문서의 의미론적 구조와 보조 기술이 이를 해석하는 방식 사이의 간극을 줄이는 데 도움을 줍니다.\n\n그러나 네이티브 요소를 우선시하는 것을 기억하세요. ARIA의 첫 번째 규칙은 \"ARIA를 사용하지 말고, 대신 네이티브 HTML을 사용하라\" 입니다. ARIA는 네이티브 HTML 요소가 부족할 때 접근성을 향상시킬 수 있지만, 가능한 경우에는 네이티브 요소를 사용하는 것이 최선입니다.\n\n![이미지](/assets/img/2024-05-15-StartingwithWebAccessibilityPracticalTipsandInitialSteps_8.png)\n\n개발자 도구에서 쉽게 접근성 트리를 확인할 수 있습니다. 여기서 자세한 정보를 확인할 수 있습니다: Accessibility tree Chrome 및 Accessibility inspector Firefox.\n\n## 이미지에 대한 대체 텍스트\n\n웹을 브라우징하는 동안 이미지를 볼 수 없는 상황을 상상해보세요. 화면 판독기를 사용하는 사용자들에게는 그게 현실입니다. 이미지의 내용에 대해 그들에게 여전히 정보를 전달할 수 있게 어떻게 할 수 있을까요? 여기서 alt 텍스트가 필요합니다:\n\n```js\n<img src=\"cat.jpg\" alt=\"편안한 담요 위에서 평화롭게 잠든 흑백 고양이\">\n```\n\n이러한 alt 텍스트는 코드 안에 숨겨져 있어서 화면 판독기와 검색 엔진에서 접근할 수 있습니다. 또한, 이미지가 로드되지 못하는 경우 해당 내용이 웹페이지에 표시되어 사용자들이 여전히 관련 정보를 받을 수 있습니다.\n\n효과적인 대체 텍스트 작성 팁:\n\n- 대체 텍스트에 \"이미지\"나 \"그림\"과 같은 표현을 넣지 마세요. 스크린 리더는 이미 해당 요소가 이미지임을 발표하기 때문에 반복될 수 있습니다.\n- 간결하고 설명적으로 유지하세요.\n- 해당 웹페이지의 모든 이미지에 대체 텍스트를 포함하세요. 대체 텍스트가 없으면 스크린 리더가 그냥 \"이미지\"로 발표할 것이고 사용자는 중요한 내용을 놓칠 수 있습니다.\n- 장식용 이미지에 대한 대체 텍스트는 비워 둘 수 있습니다. 이렇게 하면 스크린 리더가 이를 건너뛸 수 있습니다.\n- 이미지가 `a` 요소 내에 있을 경우에는 텍스트가 해당 링크가 어디로 이동하는지 설명해야 합니다.\n- 키워드 채우기(키워드를 너무 많이 사용하는 것)는 피하세요. 사용자 경험을 해칠 뿐 아니라 검색 엔진에서 스팸으로 인식될 수 있습니다.\n\n의심스러울 때는 언제든지 대체 텍스트 결정 트리를 확인할 수 있으며, 이는 다양한 시나리오에서 대체 텍스트를 사용하는 방법을 설명합니다.\n\n대체 텍스트는 SEO에도 좋습니다. 검색 엔진이 웹사이트를 크롤링할 때, 이미지의 문맥과 관련성을 이해하기 위해 대체 텍스트를 사용합니다. 이는 콘텐츠 이해를 향상시켜 검색 결과에서 웹사이트의 순위를 높이는 데 도움이 됩니다.\n\n## 키보드 탐색\n\n마우스를 사용할 수 없거나 어려워하는 수많은 사용자를 위해 웹 사이트를 키보드만으로 탐색할 수 있는 기능은 매우 중요합니다.\n\n하지만 키보드 접근성은 시각적인 장애를 가진 사용자뿐만 아니라 일시적이거나 상황적인 장애를 겪고 있는 사람들에게도 도움이 됩니다. 예를 들어, 마우스가 고장 났지만 새로 살 돈이 없는 경우와 같은 상황입니다.\n\n키보드를 사용하는 사용자가 탭 키를 누르면, 웹 페이지의 다음 상호작용 요소(버튼, 입력 필드, 링크 등)로 이동하게 되며 해당 요소는 키보드 \"포커스\"를 가지게 되어 키보드로 조작할 수 있습니다.\n\n사용자 상호작용을 필요로 하는 모든 요소는 초점을 맞출 수 있어야 하며, 사용자에게 현재 어떤 요소에 초점이 맞춰져 있는지 시각적으로 나타내야 합니다.\n\n![focus-indicator](https://miro.medium.com/v2/resize:fit:1200/1*R_Ab21lD3MkKBEidNiWrow.gif)\n\n이 초점 표시는 브라우저가 제공하는데, 일반적으로 요소 주변에 윤곽선으로 표시됩니다. 일반적인 실수 중 하나는 디자인적 이유로 css로 윤곽선을 전역적으로 제거하는 것입니다. 이는 사용자가 페이지에서 어디에 있는지를 알기 어렵게 합니다.\n\n기본 초점 표시가 사이트 디자인과 일치하지 않아 제거된 경우, 대체 스타일로 변경해야 하며 여전히 초점을 명확히 나타내어야 합니다. 예를 들어 배경 색상이나 비슷한 시각적 힌트를 사용할 수 있습니다.\n\n전체적인 표결과의 태그에 대한 문서는 **Markdown** 형식으로 그 설명이 적힌 내용을 가지고 있습니다.\n\n키보드의 탭 버튼을 누르면 웹 사이트를 방문할 때 맨 처음 이동하는 링크를 선택할 수 있고, 페이지의 주요 콘텐츠로 바로 이동할 수 있는 옵션을 제공합니다. 이를 통해 해당 부분 이전의 모든 네비게이션 요소와 링크를 건너뛸 수 있습니다.\n\n![이미지](https://miro.medium.com/v2/resize:fit:1200/1*Pi3481HP5YQFOVT713cFgw.gif)\n\n이 기능이 유용한 이유는 무엇일까요?\n\n웹 사이트를 방문할 때마다 모든 링크를 하나씩 탭해야 한다면, 주요 콘텐츠로 바로 이동하려는 목적을 달성하는 데 많은 불편함이 따를 것입니다. 진짜 짜증나죠?\n\n좋은 소식은 CSS를 조금만 활용하여 시각적으로 숨기는 것이 매우 쉽다는 것입니다. Kevin Powell의 Skip to main 튜토리얼에서 어떻게 구현하는지 배울 수 있습니다.\n\n## 색상만으로 정보 전달에 의존하지 마세요\n\n우리는 모두 색상을 동일한 방식으로 인식하지 않습니다. 특정 색상을 구분하기 어려운 사람들도 있고, 화면 리더가 색상 정보에 액세스할 수 없다는 점도 명심해야 합니다.\n\n따라서, 정보 전달을 위해 색상을 사용할 때는 시각 능력에 관계없이 모든 사람이 이해하고 콘텐츠와 효과적으로 상호작용할 수 있도록 추가 신호를 포함하는 것이 중요합니다.\n\n우리는 웹 사이트를 일시적으로 그레이스케일로 변환하여 정보가 여전히 이해하기 쉬운지 확인하는 것이 좋은 테스트 방법입니다. 또한 렛츠 게컬러블라인드 (Chrome)나 노커피 비전 시뮬레이터 (Firefox)와 같이 다양한 시각 장애를 가진 사용자가 색상을 경험하는 방법을 시뮬레이션하는 훌륭한 확장 기능도 있습니다.\n\n아래 예시에서는 색상이 오류를 나타내는 유일한 지표인 양식을 볼 수 있습니다. 오른쪽에서 색맹으로 본 경우, 빨간색과 초록색 지시기가 구분되지 않는 것으로 나타나며, 사용자가 오류를 놓치게 할 수도 있습니다.\n\n우리는 추가 시각적 신호를 추가함으로써 양식을 더 쉽게 접근할 수 있게 만들 수 있습니다: 필수 필드 옆에 오류와 성공 표시, 필수 필드 라벨 옆에 별표 표시, 그리고 사용자에게 즉각적인 피드백을 제공하는 인라인 오류 메시지입니다.\n\n![Screenshot](/assets/img/2024-05-15-StartingwithWebAccessibilityPracticalTipsandInitialSteps_11.png)\n\n## 설명적 링크\n\n보조 기술을 사용하는 사용자(스크린 리더 등)들은 종종 페이지의 모든 링크를 목록 형식으로 제공하는 기능에 의존합니다. 이를 통해 사용자는 특정 기능으로 빠르게 이동하고 웹사이트가 제공하는 내용을 파악할 수 있습니다.\n\n그러나 모든 링크가 \"자세히 읽기\"와 같은 일반적인 용어로 레이블링되어 있으면 각 링크가 어디로 이동하는지에 대한 맥락이 부족해서 도움이 되지 않습니다.\n\n예를 들어, \"여기를 클릭\"과 같은 모호한 링크 텍스트 대신에 \"서비스에 대해 더 알아보기\"와 같은 구체적인 텍스트를 선택할 수 있습니다.\n\n![image](/assets/img/2024-05-15-StartingwithWebAccessibilityPracticalTipsandInitialSteps_12.png)\n\n키보드 사용자는 링크 텍스트가 명확하고 구체적일 때 이점을 누리며 페이지를 탭하는 동안 각 링크의 목적을 빠르게 파악할 수 있습니다.\n\n다시 한 번, 시맨틱 HTML도 여기에서 중요하며 링크가 해당 것으로 인식되어 목록에 추가되도록 해야 합니다.\n\n이러한 전략들은 보다 접근성 있는 디지털 세계를 만들기 위한 시작에 불과해요. 더 배우고 구현해야 할 부분들이 많지만, 이 실용적인 권고사항을 따라 이미 상당한 영향을 미치고 있어요.\n\n더 깊이 알아보고 싶다면, 여기서 이끌어줄 자료들이 있어요:\n\n- 웹 콘텐츠 접근성 가이드라인 (WCAG): 웹 접근성의 표준으로, A, AA, 그리고 AAA의 세 가지 준수 수준으로 구성된 포괄적인 지침을 제공해요. 이러한 지침은 World Wide Web Consortium (W3C)에서 발행해요.\n- The A11Y Project: 웹 접근성을 개선하는 데 초점을 맞춘 쉽게 소화할 수 있는 콘텐츠를 제공하는 커뮤니티 주도 이니셔티브.\n- W3Cx: 웹 접근성 소개: W3C 웹 접근성 이니셔티브 (WAI)에서의 강의로, 디지털 접근성에 대한 탄탄한 기초를 구축할 수 있어요. (무료)\n- Udacity의 Google 웹 접근성 강의: 이 강의는 접근성 있는 웹 콘텐츠를 만드는 데 대한 교육을 제공하며, 필수 원칙, 기술, 그리고 최상의 실천법을 다루고 있어요. (무료)\n- 어떻게 접근성을 디자인할 것인가: UX 디자이너를 위한 (WCAG 2.2): Liz Brown이 운영하는 Udemy 강의로, UX 및 UI 디자이너를 위해 개설되었지만 제 생각으로는 개발자들에게도 매우 가치 있는 강의예요. (유료)\n","ogImage":{"url":"/assets/img/2024-05-15-StartingwithWebAccessibilityPracticalTipsandInitialSteps_0.png"},"coverImage":"/assets/img/2024-05-15-StartingwithWebAccessibilityPracticalTipsandInitialSteps_0.png","tag":["Tech"],"readingTime":11},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p><img src=\"/assets/img/2024-05-15-StartingwithWebAccessibilityPracticalTipsandInitialSteps_0.png\" alt=\"Image\"></p>\n<p>한 눈에 봐도 그림 속 두 개의 경사로 중 어떤 것이 접근성이 좋고 피해야 할 것인지 명확하게 알 수 있어요.</p>\n<p>우리는 현실 세계에서 무엇이 '접근성'을 의미하는지 알고 있죠.</p>\n<p>예를 들어 경사로를 살펴봅시다. 경사로는 원활한 이동을 가능케 하며 장애물 없이 공간을 이동할 수 있도록 해줍니다. 휠체어를 탄 사람, 유모차를 밀고 다니는 부모님, 다리 부상을 입은 사람이든 상관 없이, 경사로는 모두에게 동등한 접근을 보장해줍니다.</p>\n<p>접근성은 물리적인 세계를 넘어 디지털 세계에서도 중요합니다. 능력에 관계없이 모든 사람이 온라인 콘텐츠를 탐색할 수 있도록 어떻게 보장할 수 있을까요?</p>\n<p>웹 접근성은 많은 사람들이 압도되고 어디서부터 시작해야 할지 모르는 상태로 떠 있는 것처럼 보입니다. 본 기사는 접근성이 무엇인지, 왜 중요한지에 대해 알아보고, 웹사이트를 즉시 개선할 수 있는 몇 가지 신속하면서도 효과적인 전략을 살펴보는 명확한 출발점을 제공하기 위한 것입니다.</p>\n<p><img src=\"/assets/img/2024-05-15-StartingwithWebAccessibilityPracticalTipsandInitialSteps_1.png\" alt=\"Starting with Web Accessibility Practical Tips and Initial Steps\"></p>\n<h2>a11y</h2>\n<p>\"A11y\"이라는 용어를 들어봤을 수도 있지만, 그 의미가 무엇인지 알고 계신가요?</p>\n<p>이 용어는 '접근성(accessibility)'의 숫자 단어입니다: 숫자 11은 이 단어의 첫 번째 글자(\"a\")와 마지막 글자(\"y\") 사이의 글자 수를 나타냅니다.</p>\n<p>기본적으로, 접근성은 누구든지 그들의 신체적 또는 인지적 능력에 관계없이 모두에게 동일하게 접근하고 사용할 수 있는 디지털 콘텐츠를 디자인하고 개발하는 것을 말합니다.</p>\n<p>오늘날 우리의 세상은 온라인 속에서 모든 것이 이루어집니다. 온라인에서 물건을 사고, 호텔을 예약하고, 청구서를 지불하며, 일자리를 찾고, 음식을 주문하는 등이 있습니다. 대부분의 경우, 이러한 것들은 우리가 당연하게 여기는 일상적인 작업들입니다. 그러나 비접근성 웹사이트를 사용할 때 매일 난관에 맞닥뜨리고 있는 상당수의 사람들이 있으며, 이로 인해 뒤처지거나 배제되는 경우가 많습니다.</p>\n<h2>장애에 대한 간단한 이야기</h2>\n<p>세계 보건 기구(WHO)에 따르면 전 세계적으로 약 13억 명의 사람이 중대한 장애를 경험한다는 사실을 아셨나요? 이는 전 세계 인구의 16%에 해당하며, 우리 중 1명 중 6명이 해당됩니다.</p>\n<p>잘못된 일반적인 오해 중 하나는 장애를 맹목증만으로만 연상하는 것인데, 사실은 시각, 청각, 운동 및 인지 장애 등 여러 유형의 장애가 있습니다.</p>\n<p><img src=\"/assets/img/2024-05-15-StartingwithWebAccessibilityPracticalTipsandInitialSteps_2.png\" alt=\"이미지\"></p>\n<p>접근성에 대한 한 가지 중요한 점은 앱을 디자인하고 개발할 때 고려하기 시작하면, 모두에게 더 나은 경험을 제공하는 더 다듬어진 제품을 만들게 되고, 더 다양한 상황과 맥락에서 사용할 수 있다는 것입니다.</p>\n<p>왜 그럴까요?</p>\n<p>예를 들어보죠. 폐쇄 자막은 처음에 청각 장애가 있는 사람들을 위한 도구로 만들어졌지만, 이제는 대중화되어 다양한 상황에서 우리 모두가 의존하게 되었습니다. 버스나 의사 진료를 기다리는 조용한 장소에 있을 때처럼 자막을 켜놓은 적이 얼마나 많나요? 또한, 시끄러운 환경에서 자신을 발견하거나 현재 배우고 있는 언어로 영화를 보고 있을 때 유용합니다.</p>\n<p>이것은 다음으로 이어지는데, 우리 모두는 삶의 어느 시점에서 어떤 종류의 장애를 경험합니다. 장애는 다음과 같을 수 있습니다:</p>\n<p>영구적: 바꿀 수 없는 것. 시각 장애, 청각 장애, 관절염.</p>\n<p>일시적: 기다려야 하는 것. 팔을 부러뜨려 붕대를 감아야 하는 경우, 안경을 잃어버려서 찾을 수 없는 경우 등.</p>\n<p>상황적: 물러날 수 있는 것. 밝은 햇빛 속에서 핸드폰을 사용하려고 하면 화면을 보기 어렵고, 시끄러운 방에서는 아무것도 들리지 않는 등.</p>\n<p>또한, 우리가 노인으로 나이를 먹게 되면 우리도 결국 장애들을 경험하게 될 것입니다.</p>\n<p>이제 모두가 사용하고 기여할 수 있는 접근성 있는 웹사이트를 만들어야 하는 이유에 대해 더 잘 이해했습니다. 그렇다면 지금 바로 접근성을 향상시키는 실용적인 팁을 살펴보겠습니다.</p>\n<h2>HTML 언어 명시</h2>\n<p>쉬운 것부터 시작해 보죠. HTML 언어를 명시하는 것만으로도 장애를 가진 사람들에게 큰 도움이 될 수 있습니다. 시각 또는 인지적 장애를 가진 사용자들은 종종 화면 낭독기를 사용하는데, 이 기술은 컴퓨터 화면에 있는 내용을 소리내어 읽어 줍니다.</p>\n<p>HTML 언어를 명시하면 화면 낭독기가 어떤 언어를 사용해야 하는지 알려줍니다. 정확한 발음을 보장하기 때문에 스페인어를 프랑스어 발음으로 읽는 일은 피하고 싶겠죠?</p>\n<p>위 작업은 다음과 같이 <code>html</code> 태그의 시작 부분에 <code>lang</code> 속성을 추가하여 수행할 수 있습니다.</p>\n<pre><code class=\"hljs language-js\">&#x3C;html lang=<span class=\"hljs-string\">\"en\"</span>>\n</code></pre>\n<p>페이지 내에서 언어를 변경해야 할 경우, 특정 태그에 <code>lang</code> 속성을 사용할 수 있습니다.</p>\n<pre><code class=\"hljs language-js\">&#x3C;p lang=<span class=\"hljs-string\">\"es\"</span>><span class=\"hljs-title class_\">Texto</span> en español&#x3C;/p>\n</code></pre>\n<h2>텍스트 밀도와 글꼴 크기</h2>\n<p>이것들은 접근성을 위해 매우 중요합니다. 왜냐하면 이들은 사용자가 콘텐츠를 읽고 이해하는 데 직접적으로 영향을 미치기 때문입니다.</p>\n<p>텍스트가 너무 작고 콘텐츠가 밀접하게 밀집되어 있으면 사용자가 명확하게 읽기 어려울 수 있습니다.</p>\n<p>이 두 옵션 중 어느 것이 정보를 찾기 쉽게 만들어 주나요?</p>\n<p><img src=\"/assets/img/2024-05-15-StartingwithWebAccessibilityPracticalTipsandInitialSteps_3.png\" alt=\"Image of Color Contrast\"></p>\n<h2>Color contrast</h2>\n<p>Color can be fun but it also needs to be functional. Ensuring sufficient contrast between text and background elements makes content easier to read for everyone, especially those with visual impairments. One tool that I like to use to check if two colors have enough contrast is the WebAIM Contrast Checker.</p>\n<p><img src=\"/assets/img/2024-05-15-StartingwithWebAccessibilityPracticalTipsandInitialSteps_4.png\" alt=\"Another Image\"></p>\n<p>이 규칙에는 몇 가지 예외 사항이 있습니다. 대비 가이드라인을 준수할 필요가 없는 요소들은 다음과 같습니다:</p>\n<ul>\n<li>중요한 정보를 전달하지 않고 순전히 심미적인 요소인 장식용 요소.</li>\n<li>콘텐츠를 이해하는 데 필수적이지 않은 로고 및 이미지.</li>\n<li>즉각적인 사용자 상호작용이 필요하지 않은 비활성 상태의 요소.</li>\n</ul>\n<h2>의미론적 HTML</h2>\n<p>HTML을 처음 배우기 시작했을 때, \"의미론적 HTML\"의 개념이 자주 강조되었던 것을 기억합니다. <code>section</code>, <code>article</code> 또는 <code>header</code>와 같은 요소를 사용하는 중요성에 대해 자주 들었는데, 비의미론적인 태그인 <code>div</code> 또는 <code>span</code>에 의존하는 대신 이러한 요소를 사용하는 것이 왜 중요한지 처음에는 완전히 이해하지 못했었습니다. 그러나 그 이후로 그 이유가 꽤 타당하다는 것을 깨달았습니다.</p>\n<p>간단히 말해서, \"시맨틱 HTML\"이라고 말할 때 그것은 의미가 있다는 뜻입니다. 시맨틱 HTML은 콘텐츠를 올바르게 설명할 것입니다. 예를 들어 <code>header</code> 요소는 헤더를 나타내고, <code>p</code> 요소는 단락을 설명합니다. 그래서 우리가 <code>header</code> 요소를 사용하면 즉시 헤더로 인식될 것입니다.</p>\n<p>또한, HTML 요소에는 기본 스타일이 함께 제공됩니다. 예를 들어, 순서 없는 목록 <code>ul</code>은 자동으로 점 표시가 포함되어 있어 시각적으로 콘텐츠 구조를 이해하는 데 도움이 됩니다. 추가적인 사용자 정의 스타일 없이도.</p>\n<p>이 점을 더 잘 설명하기 위해 동일한 내용의 두 버전을 비교해보세요: 하나는 시맨틱 HTML로 작성되었고 다른 하나는 시맨틱이 아닌 HTML로 작성되었습니다. 코드와 시각적으로 페이지의 구조와 내용을 더 효과적으로 전달하는 버전은 무엇입니까?</p>\n<p><img src=\"/assets/img/2024-05-15-StartingwithWebAccessibilityPracticalTipsandInitialSteps_5.png\" alt=\"이미지\"></p>\n<img src=\"/assets/img/2024-05-15-StartingwithWebAccessibilityPracticalTipsandInitialSteps_6.png\">\n<p>와우, 잘 했어요! 그런데 이것이 접근성과 무슨 상관이 있나요?</p>\n<p>간단히 말하자면 시맨틱 HTML은 보조 기술이 사용자에게 웹페이지에 제시된 콘텐츠에 대해 더 명확한 그림을 제공할 수 있도록 도와줍니다. 예를 들어, 세 개의 아이템을 포함하는 정렬된 목록 <code>ol</code>을 만나면, 화면 낭독기는 \"3 개의 항목 목록. 1: ..., 2: ..., 3: ...\"과 같이 읽습니다. 이렇게 함으로써 콘텐츠를 더 쉽게 따를 수 있게 됩니다. 또한 <code>header</code>, <code>nav</code>, <code>main</code>, <code>footer</code> 같은 landmark는 안내표지로 작용하여 화면 낭독기가 웹페이지의 구조를 더 효율적으로 탐색할 수 있습니다. 이것은 사용자가 콘텐츠 내에서 좀 더 쉽게 방향을 잡을 수 있게 해줍니다.</p>\n<p>시맨틱 HTML이 보조 기술과 어떻게 작동하는지 궁금하다면 계속 읽어보세요. 그렇지 않으면 \"이미지에 대한 대체 텍스트\"에 관한 다음 섹션으로 건너뛰어도 괜찮아요.</p>\n<h2>시멘틱 HTML과 보조 기술</h2>\n<p>대다수 사용자는 웹 페이지를 탐색할 때 사용자 인터페이스(UI)와 직관적으로 상호작용합니다. 예를 들어, 버튼을 발견하고 본능적으로 그 버튼을 클릭할 수 있다는 것을 알 수 있습니다. 또한 “오른쪽 하단에 있는 링크를 클릭하십시오”와 같은 지시에 따를 수 있습니다.</p>\n<p>그러나 시각 장애가 있는 사용자들은 시각적 단서에 의존할 수 없습니다. 이것이 왜 스크린 리더, 음성 인식 소프트웨어 또는 대체 입력 장치와 같은 보조 기술이 그들을 위한 대안 인터페이스를 만들기 위해 요소들을 감지해야 하는 이유입니다.</p>\n<p>그리고 웹 브라우저는 보조 기술과 어떻게 상호작용합니까?</p>\n<p>HTML 코드를 작성하면 브라우저가 파싱하여 Document Object Model (DOM) 트리로 변환합니다. 이 트리는 웹페이지의 구조를 표현하며 모든 HTML 요소와 그들의 관계를 포함합니다. 이 DOM 트리를 기반으로 브라우저는 그래픽 사용자 인터페이스 (GUI)를 렌더링합니다.</p>\n<p>동시에 브라우저는 DOM에서 파생된 접근성 트리를 생성합니다.</p>\n<p>이 트리는 시맨틱적으로 관련이 없는 요소 (예: <code>div</code> 요소와 같이 위치 지정을 위해 사용되는 요소)를 걸러내고 페이지 구조에 기여하는 요소들 (<code>button</code>, <code>header</code> 등)을 유지합니다.</p>\n<p><img src=\"/assets/img/2024-05-15-StartingwithWebAccessibilityPracticalTipsandInitialSteps_7.png\" alt=\"Image\"></p>\n<p>그래서 시맨틱 HTML이 중요한 이유입니다. 우리는 <code>main</code>, <code>header</code>, <code>footer</code>와 같은 랜드마크를 사용하고, 순차적으로 <code>h1</code>부터 <code>h6</code>까지 레벨을 건너뛰지 않고 사용하며, 네비게이션 메뉴에 <code>nav</code>, 버튼 등을 사용하여 페이지의 구조와 기능이 올바르게 전달되도록 해야 합니다.</p>\n<p>예를 들어 <code>button</code> 태그 대신 <code>div</code>를 버튼으로 사용한다면, 보조 기술이 이를 감지하지 못할 수도 있어 사용자가 양식을 제출하는 등 중요한 기능을 놓칠 수 있습니다.</p>\n<p>일반 HTML 요소만으로 의도한 의미를 충분히 전달할 수 없는 경우, 접근성을 향상시키기 위해 ARIA(접근 가능한 리치 인터넷 응용 프로그램)를 마지막 수단으로 사용할 수 있습니다.</p>\n<p>ARIA는 HTML 요소에 추가할 수 있는 역할, 상태, 속성에 대한 추가 정보를 제공하는 속성의 세트입니다. 기본적으로 HTML 문서의 의미론적 구조와 보조 기술이 이를 해석하는 방식 사이의 간극을 줄이는 데 도움을 줍니다.</p>\n<p>그러나 네이티브 요소를 우선시하는 것을 기억하세요. ARIA의 첫 번째 규칙은 \"ARIA를 사용하지 말고, 대신 네이티브 HTML을 사용하라\" 입니다. ARIA는 네이티브 HTML 요소가 부족할 때 접근성을 향상시킬 수 있지만, 가능한 경우에는 네이티브 요소를 사용하는 것이 최선입니다.</p>\n<p><img src=\"/assets/img/2024-05-15-StartingwithWebAccessibilityPracticalTipsandInitialSteps_8.png\" alt=\"이미지\"></p>\n<p>개발자 도구에서 쉽게 접근성 트리를 확인할 수 있습니다. 여기서 자세한 정보를 확인할 수 있습니다: Accessibility tree Chrome 및 Accessibility inspector Firefox.</p>\n<h2>이미지에 대한 대체 텍스트</h2>\n<p>웹을 브라우징하는 동안 이미지를 볼 수 없는 상황을 상상해보세요. 화면 판독기를 사용하는 사용자들에게는 그게 현실입니다. 이미지의 내용에 대해 그들에게 여전히 정보를 전달할 수 있게 어떻게 할 수 있을까요? 여기서 alt 텍스트가 필요합니다:</p>\n<pre><code class=\"hljs language-js\">&#x3C;img src=<span class=\"hljs-string\">\"cat.jpg\"</span> alt=<span class=\"hljs-string\">\"편안한 담요 위에서 평화롭게 잠든 흑백 고양이\"</span>>\n</code></pre>\n<p>이러한 alt 텍스트는 코드 안에 숨겨져 있어서 화면 판독기와 검색 엔진에서 접근할 수 있습니다. 또한, 이미지가 로드되지 못하는 경우 해당 내용이 웹페이지에 표시되어 사용자들이 여전히 관련 정보를 받을 수 있습니다.</p>\n<p>효과적인 대체 텍스트 작성 팁:</p>\n<ul>\n<li>대체 텍스트에 \"이미지\"나 \"그림\"과 같은 표현을 넣지 마세요. 스크린 리더는 이미 해당 요소가 이미지임을 발표하기 때문에 반복될 수 있습니다.</li>\n<li>간결하고 설명적으로 유지하세요.</li>\n<li>해당 웹페이지의 모든 이미지에 대체 텍스트를 포함하세요. 대체 텍스트가 없으면 스크린 리더가 그냥 \"이미지\"로 발표할 것이고 사용자는 중요한 내용을 놓칠 수 있습니다.</li>\n<li>장식용 이미지에 대한 대체 텍스트는 비워 둘 수 있습니다. 이렇게 하면 스크린 리더가 이를 건너뛸 수 있습니다.</li>\n<li>이미지가 <code>a</code> 요소 내에 있을 경우에는 텍스트가 해당 링크가 어디로 이동하는지 설명해야 합니다.</li>\n<li>키워드 채우기(키워드를 너무 많이 사용하는 것)는 피하세요. 사용자 경험을 해칠 뿐 아니라 검색 엔진에서 스팸으로 인식될 수 있습니다.</li>\n</ul>\n<p>의심스러울 때는 언제든지 대체 텍스트 결정 트리를 확인할 수 있으며, 이는 다양한 시나리오에서 대체 텍스트를 사용하는 방법을 설명합니다.</p>\n<p>대체 텍스트는 SEO에도 좋습니다. 검색 엔진이 웹사이트를 크롤링할 때, 이미지의 문맥과 관련성을 이해하기 위해 대체 텍스트를 사용합니다. 이는 콘텐츠 이해를 향상시켜 검색 결과에서 웹사이트의 순위를 높이는 데 도움이 됩니다.</p>\n<h2>키보드 탐색</h2>\n<p>마우스를 사용할 수 없거나 어려워하는 수많은 사용자를 위해 웹 사이트를 키보드만으로 탐색할 수 있는 기능은 매우 중요합니다.</p>\n<p>하지만 키보드 접근성은 시각적인 장애를 가진 사용자뿐만 아니라 일시적이거나 상황적인 장애를 겪고 있는 사람들에게도 도움이 됩니다. 예를 들어, 마우스가 고장 났지만 새로 살 돈이 없는 경우와 같은 상황입니다.</p>\n<p>키보드를 사용하는 사용자가 탭 키를 누르면, 웹 페이지의 다음 상호작용 요소(버튼, 입력 필드, 링크 등)로 이동하게 되며 해당 요소는 키보드 \"포커스\"를 가지게 되어 키보드로 조작할 수 있습니다.</p>\n<p>사용자 상호작용을 필요로 하는 모든 요소는 초점을 맞출 수 있어야 하며, 사용자에게 현재 어떤 요소에 초점이 맞춰져 있는지 시각적으로 나타내야 합니다.</p>\n<p><img src=\"https://miro.medium.com/v2/resize:fit:1200/1*R_Ab21lD3MkKBEidNiWrow.gif\" alt=\"focus-indicator\"></p>\n<p>이 초점 표시는 브라우저가 제공하는데, 일반적으로 요소 주변에 윤곽선으로 표시됩니다. 일반적인 실수 중 하나는 디자인적 이유로 css로 윤곽선을 전역적으로 제거하는 것입니다. 이는 사용자가 페이지에서 어디에 있는지를 알기 어렵게 합니다.</p>\n<p>기본 초점 표시가 사이트 디자인과 일치하지 않아 제거된 경우, 대체 스타일로 변경해야 하며 여전히 초점을 명확히 나타내어야 합니다. 예를 들어 배경 색상이나 비슷한 시각적 힌트를 사용할 수 있습니다.</p>\n<p>전체적인 표결과의 태그에 대한 문서는 <strong>Markdown</strong> 형식으로 그 설명이 적힌 내용을 가지고 있습니다.</p>\n<p>키보드의 탭 버튼을 누르면 웹 사이트를 방문할 때 맨 처음 이동하는 링크를 선택할 수 있고, 페이지의 주요 콘텐츠로 바로 이동할 수 있는 옵션을 제공합니다. 이를 통해 해당 부분 이전의 모든 네비게이션 요소와 링크를 건너뛸 수 있습니다.</p>\n<p><img src=\"https://miro.medium.com/v2/resize:fit:1200/1*Pi3481HP5YQFOVT713cFgw.gif\" alt=\"이미지\"></p>\n<p>이 기능이 유용한 이유는 무엇일까요?</p>\n<p>웹 사이트를 방문할 때마다 모든 링크를 하나씩 탭해야 한다면, 주요 콘텐츠로 바로 이동하려는 목적을 달성하는 데 많은 불편함이 따를 것입니다. 진짜 짜증나죠?</p>\n<p>좋은 소식은 CSS를 조금만 활용하여 시각적으로 숨기는 것이 매우 쉽다는 것입니다. Kevin Powell의 Skip to main 튜토리얼에서 어떻게 구현하는지 배울 수 있습니다.</p>\n<h2>색상만으로 정보 전달에 의존하지 마세요</h2>\n<p>우리는 모두 색상을 동일한 방식으로 인식하지 않습니다. 특정 색상을 구분하기 어려운 사람들도 있고, 화면 리더가 색상 정보에 액세스할 수 없다는 점도 명심해야 합니다.</p>\n<p>따라서, 정보 전달을 위해 색상을 사용할 때는 시각 능력에 관계없이 모든 사람이 이해하고 콘텐츠와 효과적으로 상호작용할 수 있도록 추가 신호를 포함하는 것이 중요합니다.</p>\n<p>우리는 웹 사이트를 일시적으로 그레이스케일로 변환하여 정보가 여전히 이해하기 쉬운지 확인하는 것이 좋은 테스트 방법입니다. 또한 렛츠 게컬러블라인드 (Chrome)나 노커피 비전 시뮬레이터 (Firefox)와 같이 다양한 시각 장애를 가진 사용자가 색상을 경험하는 방법을 시뮬레이션하는 훌륭한 확장 기능도 있습니다.</p>\n<p>아래 예시에서는 색상이 오류를 나타내는 유일한 지표인 양식을 볼 수 있습니다. 오른쪽에서 색맹으로 본 경우, 빨간색과 초록색 지시기가 구분되지 않는 것으로 나타나며, 사용자가 오류를 놓치게 할 수도 있습니다.</p>\n<p>우리는 추가 시각적 신호를 추가함으로써 양식을 더 쉽게 접근할 수 있게 만들 수 있습니다: 필수 필드 옆에 오류와 성공 표시, 필수 필드 라벨 옆에 별표 표시, 그리고 사용자에게 즉각적인 피드백을 제공하는 인라인 오류 메시지입니다.</p>\n<p><img src=\"/assets/img/2024-05-15-StartingwithWebAccessibilityPracticalTipsandInitialSteps_11.png\" alt=\"Screenshot\"></p>\n<h2>설명적 링크</h2>\n<p>보조 기술을 사용하는 사용자(스크린 리더 등)들은 종종 페이지의 모든 링크를 목록 형식으로 제공하는 기능에 의존합니다. 이를 통해 사용자는 특정 기능으로 빠르게 이동하고 웹사이트가 제공하는 내용을 파악할 수 있습니다.</p>\n<p>그러나 모든 링크가 \"자세히 읽기\"와 같은 일반적인 용어로 레이블링되어 있으면 각 링크가 어디로 이동하는지에 대한 맥락이 부족해서 도움이 되지 않습니다.</p>\n<p>예를 들어, \"여기를 클릭\"과 같은 모호한 링크 텍스트 대신에 \"서비스에 대해 더 알아보기\"와 같은 구체적인 텍스트를 선택할 수 있습니다.</p>\n<p><img src=\"/assets/img/2024-05-15-StartingwithWebAccessibilityPracticalTipsandInitialSteps_12.png\" alt=\"image\"></p>\n<p>키보드 사용자는 링크 텍스트가 명확하고 구체적일 때 이점을 누리며 페이지를 탭하는 동안 각 링크의 목적을 빠르게 파악할 수 있습니다.</p>\n<p>다시 한 번, 시맨틱 HTML도 여기에서 중요하며 링크가 해당 것으로 인식되어 목록에 추가되도록 해야 합니다.</p>\n<p>이러한 전략들은 보다 접근성 있는 디지털 세계를 만들기 위한 시작에 불과해요. 더 배우고 구현해야 할 부분들이 많지만, 이 실용적인 권고사항을 따라 이미 상당한 영향을 미치고 있어요.</p>\n<p>더 깊이 알아보고 싶다면, 여기서 이끌어줄 자료들이 있어요:</p>\n<ul>\n<li>웹 콘텐츠 접근성 가이드라인 (WCAG): 웹 접근성의 표준으로, A, AA, 그리고 AAA의 세 가지 준수 수준으로 구성된 포괄적인 지침을 제공해요. 이러한 지침은 World Wide Web Consortium (W3C)에서 발행해요.</li>\n<li>The A11Y Project: 웹 접근성을 개선하는 데 초점을 맞춘 쉽게 소화할 수 있는 콘텐츠를 제공하는 커뮤니티 주도 이니셔티브.</li>\n<li>W3Cx: 웹 접근성 소개: W3C 웹 접근성 이니셔티브 (WAI)에서의 강의로, 디지털 접근성에 대한 탄탄한 기초를 구축할 수 있어요. (무료)</li>\n<li>Udacity의 Google 웹 접근성 강의: 이 강의는 접근성 있는 웹 콘텐츠를 만드는 데 대한 교육을 제공하며, 필수 원칙, 기술, 그리고 최상의 실천법을 다루고 있어요. (무료)</li>\n<li>어떻게 접근성을 디자인할 것인가: UX 디자이너를 위한 (WCAG 2.2): Liz Brown이 운영하는 Udemy 강의로, UX 및 UI 디자이너를 위해 개설되었지만 제 생각으로는 개발자들에게도 매우 가치 있는 강의예요. (유료)</li>\n</ul>\n</body>\n</html>\n"},"__N_SSG":true}